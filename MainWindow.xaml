<Window x:Class="MHW_MonsterSize_Editor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MHW_MonsterSize_Editor"
        mc:Ignorable="d"
        Title="MHW Monster Size Editor" Height="450" Width="800">
    <Grid>
        <Menu Height="25" VerticalAlignment="Top">
            <MenuItem Height="25" Width="100" Header="{DynamicResource file}">
                <MenuItem Height="25" Width="140" Header="{DynamicResource load}" Click="OpenFile"></MenuItem>
                <MenuItem Height="25" Width="140" Header="{DynamicResource save}" Click="SaveFile"></MenuItem>
                <MenuItem Height="25" Width="140" Header="{DynamicResource reset}" Click="Reset"></MenuItem>
            </MenuItem>
            <MenuItem Height="25" Width="100" Header="{DynamicResource language}" Name="Languages">
                <MenuItem Height="25" Width="160" IsCheckable="True" Header="English" Tag="en_US" Checked="LanguageChanged" Unchecked="LangUncheck"></MenuItem>
                <MenuItem Height="25" Width="160" IsCheckable="True" Header="日本語" Tag="ja_JP" Checked="LanguageChanged" Unchecked="LangUncheck"></MenuItem>
                <MenuItem Height="25" Width="160" IsCheckable="True" Header="简体中文" Tag="zh_CN" Checked="LanguageChanged" Unchecked="LangUncheck"></MenuItem>
                <MenuItem Height="25" Width="160" IsCheckable="True" Header="繁体中文" Tag="zh_TW" Checked="LanguageChanged" Unchecked="LangUncheck"></MenuItem>
            </MenuItem>

            <MenuItem Height="25" Width="100" Header="{DynamicResource about}">
                <MenuItem Height="25" Width="160" Header="Ver 2.2"></MenuItem>
                <MenuItem Height="25" Width="160" Header="——冰块⑨号"></MenuItem>
            </MenuItem>
        </Menu>
        <Menu Height="25" Width="120" VerticalAlignment="Top" HorizontalAlignment="Right" >
            <MenuItem Height="25" Width="120" Header="{DynamicResource path}" Click="ShowPath"/>
        </Menu>


        <TabControl Margin="10,35,10,10" SelectionChanged="TabChange">
            <TabItem x:Name="SizeEdit" Header="{DynamicResource sizeEdit}">
                <DataGrid HorizontalAlignment="Stretch" 
                          Margin="10,10,125,10" 
                          Width="Auto" 
                          SelectionUnit="CellOrRowHeader" 
                          RowHeaderWidth="10" 
                          SelectionMode="Extended" 
                          CellEditEnding="Modify" 
                          HorizontalScrollBarVisibility="Auto" 
                          AutoGenerateColumns="False"  
                          VerticalAlignment="Stretch" 
                          Name="SizeT" 
                          CanUserResizeRows="False" 
                          CanUserReorderColumns="False"
                          Drop="DropOpen"
                          AllowDrop="True">

                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="sizeIndex" Header="Index" IsReadOnly="True" Width="50" Binding="{Binding Key}"/>
                        <DataGridTextColumn x:Name="sizeDesc" Header="Description" IsReadOnly="True" Width="180" Binding="{Binding Description}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>

            </TabItem>
            <TabItem x:Name="ProbEdit" Header="{DynamicResource probEdit}">
                <DataGrid HorizontalAlignment="Stretch" 
                          Margin="10,10,125,10" 
                          Width="Auto" 
                          SelectionUnit="CellOrRowHeader" 
                          RowHeaderWidth="10" 
                          SelectionMode="Extended" 
                          CellEditEnding="Modify" 
                          HorizontalScrollBarVisibility="Auto" 
                          AutoGenerateColumns="False"  
                          VerticalAlignment="Stretch" 
                          Name="ProbT" 
                          CanUserResizeRows="False" 
                          CanUserReorderColumns="False"
                          Drop="DropOpen"
                          AllowDrop="True">

                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="probIndex" Header="Index" Width="50" IsReadOnly="True" Binding="{Binding Key}"/>
                        <DataGridTextColumn x:Name="probDesc" Header="Description" Width="180" IsReadOnly="True" Binding="{Binding Description}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn x:Name="total" Header="Total" Width="50" IsReadOnly="True" Binding="{Binding Total}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                                    <Setter Property="Background" Value="Red"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Total}" Value="100">
                                            <Setter Property="Background" Value="LightGreen"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>

            </TabItem>
            <TabItem x:Name="CrownEdit" Header="{DynamicResource crownEdit}">
                <DataGrid HorizontalAlignment="Stretch" 
                          Margin="10,10,10,10" 
                          Width="Auto" 
                          SelectionUnit="CellOrRowHeader" 
                          RowHeaderWidth="10" 
                          SelectionMode="Extended" 
                          CellEditEnding="Modify" 
                          HorizontalScrollBarVisibility="Auto" 
                          AutoGenerateColumns="False"  
                          VerticalAlignment="Stretch" 
                          Name="CrownT" 
                          CanUserResizeRows="False" 
                          CanUserReorderColumns="False"
                          Drop="DropOpen"
                          AllowDrop="True">

                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.Columns>
                        <DataGridTextColumn x:Name="crownIndex" Header="{StaticResource index}" IsReadOnly="True" Width="50" Binding="{Binding Key}"/>
                        <DataGridTextColumn x:Name="monster" Header="{DynamicResource monster}" IsReadOnly="True" Width="180" Binding="{Binding EmName}">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn x:Name="basesize" Header="{DynamicResource base}" Width="150" Binding="{Binding Size}"/>
                        <DataGridTextColumn x:Name="small" Header="{DynamicResource small}" Width="50" Binding="{Binding Small}"/>
                        <DataGridTextColumn x:Name="silver" Header="{DynamicResource silver}" Width="50" Binding="{Binding Silver}"/>
                        <DataGridTextColumn x:Name="big" Header="{DynamicResource big}" Width="50" Binding="{Binding Big}"/>
                    </DataGrid.Columns>
                </DataGrid>

            </TabItem>
        </TabControl>
        <StackPanel Name="BtnPanel" VerticalAlignment="Center" Orientation="Vertical" Margin="0,10,10,10" HorizontalAlignment="Right" Width="120">
            <Button Width="100" Height="25" Margin="10" Name="allZero" Click="AllZero" Content="{DynamicResource allZero}"/>
            <TextBox Width="100" Height="25" Margin="0,10,0,-5" Name="fixSize" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                <TextBox.Resources>
                    <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="0.3" Stretch="None" AlignmentX="Center">
                        <VisualBrush.Visual>
                            <TextBlock FontStyle="Italic" Text="{DynamicResource size}"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </TextBox.Resources>
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Style.Triggers>
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                            </Trigger>
                            <Trigger Property="Text" Value="">
                                <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <Button Width="100" Height="25" Margin="10" Name="singleFix" Click="SingleFix" Content="{DynamicResource singleFix}"/>
            <TextBox Width="100" Height="25" Margin="10" Name="prob" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                <TextBox.Resources>
                    <VisualBrush x:Key="HelpBrush" TileMode="None" Opacity="0.3" Stretch="None" AlignmentX="Center">
                        <VisualBrush.Visual>
                            <TextBlock FontStyle="Italic" Text="{DynamicResource prob}"/>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </TextBox.Resources>
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Style.Triggers>
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                            </Trigger>
                            <Trigger Property="Text" Value="">
                                <Setter Property="Background" Value="{StaticResource HelpBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <Button Width="100" Height="25" Margin="0,-5,0,10" Name="fill" Click="Fill" Content="{DynamicResource fill}"/>
            
        </StackPanel>

    </Grid>

</Window>
